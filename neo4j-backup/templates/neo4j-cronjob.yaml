{{- template "neo4j.backup.checkIfSecretExistsOrNot" . -}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ include "neo4j.fullname" . }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ include "neo4j.fullname" . | quote }}
    {{- include "neo4j.labels" $.Values.neo4j.labels | indent 4 }}
spec:
  schedule: {{ $.Values.neo4j.jobSchedule | default "* * * * *" | quote }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: {{ $.Values.neo4j.successfulJobsHistoryLimit | default 3 }}
  failedJobsHistoryLimit: {{ $.Values.neo4j.failedJobsHistoryLimit | default 1 }}
  jobTemplate:
    spec:
      backoffLimit: {{ $.Values.neo4j.backoffLimit | default 6 }}
      template:
        metadata:
          annotations:
            {{- include "neo4j.annotations" $.Values.neo4j.podAnnotations | indent 12 }}
          labels:
            {{- include "neo4j.labels" $.Values.neo4j.podLabels | indent 12 }}
        spec:
          {{- if .Values.serviceAccountName }}
          serviceAccountName: {{ .Values.serviceAccountName }}
          {{- /* explicitly mount token because some service accounts disable automount-by-default and require explicit opt-in */}}
          automountServiceAccountToken: true
          {{- end }}
          restartPolicy: Never
          securityContext: {{ .Values.securityContext | toYaml  | nindent 12 }}
          containers:
            - name: graph-backup
              image: {{ .Values.neo4j.image }}:{{ .Values.neo4j.imageTag }}
              imagePullPolicy: Always
              resources:
                requests:
                  ephemeral-storage: {{ .Values.resources.requests.ephemeralStorage | default "4Gi" }}
                limits:
                  ephemeral-storage: {{ .Values.resources.limits.ephemeralStorage | default "5Gi" }}
              env:
                - name: ADDRESS
                  value: {{ required "You must specify a ADDRESS variable in values.yaml in the format <host>:<port> . Set it via --set backup.address" .Values.backup.address  | trim }}
                - name: DATABASE
                  value: {{ required "You must specify a DATABASE variable in values.yaml. . Set it via --set backup.database" .Values.backup.database | trim }}
                - name: CLOUD_PROVIDER
                  value: {{ required "You must specify a CLOUD_PROVIDER" .Values.backup.cloudProvider | trim }}
                - name: BUCKET_NAME
                  value: {{ required "You must specify a BUCKET NAME" .Values.backup.bucketName | trim }}
                - name: PAGE_CACHE
                  value: {{ .Values.backup.pageCache | default "2G" | trim }}
                - name: INCLUDE_METADATA
                  value: "{{ .Values.backup.includeMetadata | default "all" | trim }}"
                - name: PARALLEL_RECOVERY
                  value: "{{ .Values.backup.parallelRecovery | default false }}"
                - name: TYPE
                  value: "{{ .Values.backup.type | default "AUTO" | trim }}"
                - name: KEEP_FAILED
                  value: "{{ .Values.backup.keepFailed | default false }}"
                - name: CREDENTIAL_PATH
                  value: "{{ printf "/credentials/%s" .Values.backup.secretKeyName  }}"
                - name: VERBOSE
                  value: "{{ .Values.backup.verbose | default true }}"
                - name: CONSISTENCY_CHECK_ENABLE
                  value: "{{ .Values.consistencyCheck.enable | default false }}"
                - name: CONSISTENCY_CHECK_INDEXES
                  value: "{{ .Values.consistencyCheck.checkIndexes | default false }}"
                - name: CONSISTENCY_CHECK_GRAPH
                  value: "{{ .Values.consistencyCheck.checkGraph | default false }}"
                - name: CONSISTENCY_CHECK_COUNTS
                  value: "{{ .Values.consistencyCheck.checkCounts | default false }}"
                - name: CONSISTENCY_CHECK_PROPERTYOWNERS
                  value: "{{ .Values.consistencyCheck.checkPropertyOwners | default false }}"
                - name: CONSISTENCY_CHECK_MAXOFFHEAPMEMORY
                  value: "{{ .Values.consistencyCheck.maxOffHeapMemory | default "" | trim }}"
                - name: CONSISTENCY_CHECK_THREADS
                  value: "{{ .Values.consistencyCheck.threads | default "" | trim }}"
                - name: CONSISTENCY_CHECK_VERBOSE
                  value: "{{ .Values.consistencyCheck.verbose | default true }}"
              volumeMounts:
                - name: credentials
                  mountPath: /credentials
                  readOnly: true
                - name: "backup"
                  mountPath: "/backups"
          volumes:
            - name: credentials
              secret:
                secretName: "{{ .Values.backup.secretName }}"
                items:
                  - key: "{{ .Values.backup.secretKeyName }}"
                    path: "{{ .Values.backup.secretKeyName }}"
            - name: "backup"
{{- with .Values.tempVolume }}
{{- toYaml . | nindent 14 }}
{{- end }}
